# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.            - nom : Configurer l'environnement Node.js
  utilise : actions/setup-node@v4.0.0
  avec:
    # Définissez toujours l'authentification dans npmrc.
    toujours-auth : # facultatif, la valeur par défaut est false
    # Version Spécification de la version à utiliser. Exemples : 12.x, 10.15.1, >=10.15.0.
    version du nœud : # facultatif
    # Fichier contenant la version Spec de la version à utiliser. Exemples : .nvmrc, .node-version, .tool-versions.
    fichier-version-nœud : # facultatif
    # Architecture cible à utiliser par Node. Exemples : x86, x64. Utilisera l’architecture système par défaut.
    architecture : # facultatif
    # Définissez cette option si vous souhaitez que l'action vérifie la dernière version disponible qui satisfait aux spécifications de version.
    check-latest : # facultatif
    # Registre facultatif à configurer pour l'authentification. Définira le registre dans un fichier .npmrc et .yarnrc au niveau du projet, et configurera l'authentification pour lire à partir d'env.NODE_AUTH_TOKEN.
    URL du registre : # facultatif
    # Portée facultative pour l'authentification par rapport aux registres étendus. Reviendra au propriétaire du référentiel lors de l'utilisation du registre des packages GitHub (https://npm.pkg.github.com/).
    portée : # facultatif
    # Utilisé pour extraire les distributions de nœuds à partir des versions de nœuds. Puisqu'il existe une valeur par défaut, celle-ci n'est généralement pas fournie par l'utilisateur. Lors de l'exécution de cette action sur github.com, la valeur par défaut est suffisante. Lorsque vous utilisez GHES, vous pouvez transmettre un jeton d'accès personnel à github.com si vous rencontrez une limitation de débit.
    token : # facultatif, la valeur par défaut est ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Utilisé pour spécifier un gestionnaire de packages pour la mise en cache dans le répertoire par défaut. Valeurs prises en charge : npm, fil, pnpm.
    cache : # facultatif
    # Utilisé pour spécifier le chemin d'accès à un fichier de dépendance : package-lock.json, fil.lock, etc. Prend en charge les caractères génériques ou une liste de noms de fichiers pour la mise en cache de plusieurs dépendances.
    chemin de dépendance du cache : # facultatif
          
